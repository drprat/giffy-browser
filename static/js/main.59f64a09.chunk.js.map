{"version":3,"sources":["actions/constants.js","reducers/gifLists.reducer.js","reducers/error.reducer.js","reducers/index.js","components/ListHeader.js","components/ListItem.js","components/GifList.js","actions/gifList.action.js","containers/HomeList.js","containers/carousel/CarouselList.js","containers/carousel/CarouselLibList.js","containers/NotFound.js","containers/SearchListItem.js","containers/ViewSearch.js","routes.js","containers/commons/Footer.js","containers/commons/SearchInput.js","containers/commons/Nav.js","containers/commons/Layout.js","App.js","serviceWorker.js","index.js"],"names":["constants","FETCH_EXCITED","FETCH_HAPPY","FETCH_KEYWORD","FETCH_SEARCH","CLEAR_SEARCH_RESULT","FETCH_GIPHY_ERROR","initialState","excited","happy","keyword","error","rootReducer","combineReducers","gifListsReducer","state","arguments","length","undefined","action","newState","Object","assign","type","payload","errorReducer","FETCH_TMDBAPI_ERROR","console","log","ListHeader","_ref","header","react_default","a","createElement","className","ListItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderPic","gif","images","downsized","url","alt","data-src","src","bind","assertThisInitialized","react_router_dom","to","React","Component","GifList","margin","renderGifList","gifList","map","components_ListItem","key","id","handleLeftClick","e","preventDefault","setState","pop","unshift","el","findDOMNode","refs","content","$","animate","marginLeft","handleRightClick","push","shift","_this$props$gifList","onClick","role","ref","gifList_action","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","GphApiClient","search","q","then","response","data","err","stop","_x","apply","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","HomeList","_this$props","fetchExcited","fetchHappy","fetchKeyword","_this$props2","components_ListHeader","components_GifList","connect","GifListAction","input","settings","speed","slidesToShow","lazyLoad","infinite","slidesToScroll","initialSlide","responsive","breakpoint","CarouselList","lib_default","CarouselLibList","carousel_CarouselList","NotFound","style","fontSize","color","SearchListItem","poster_path","ViewSearch","fetchSearch","match","params","currentParam","clearSearchResult","containers_SearchListItem","withRouter","BaseRouter","react_router","exact","path","component","Footer","href","SearchInput","ENTER_KEY","handleChange","target","value","handleSubmit","history","concat","_this2","_this$state","placeholder","onChange","onKeyDown","keyCode","Nav","containers_commons_SearchInput","BaseLayout","commons_Nav","children","commons_Footer","App","Layout","routes","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59f64a09.chunk.js","sourcesContent":["export default {\r\n  FETCH_EXCITED: \"FETCH_EXCITED\",\r\n  FETCH_HAPPY: \"FETCH_HAPPY\",\r\n  FETCH_KEYWORD: \"FETCH_KEYWORD\",\r\n  \r\n  FETCH_SEARCH: \"FETCH_SEARCH\",\r\n  CLEAR_SEARCH_RESULT: \"CLEAR_SEARCH_RESULT\",\r\n\r\n  FETCH_GIPHY_ERROR: \"FETCH_GIPHY_ERROR\"\r\n};\r\n","import constants from \"../actions/constants\";\r\n\r\nconst initialState = {  \r\n  excited: [],\r\n  happy: [],\r\n  keyword: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const newState = Object.assign({}, state);\r\n\r\n  switch (action.type) {\r\n   \r\n    case constants.FETCH_EXCITED:\r\n      newState.excited = action.payload;\r\n      return newState;\r\n\r\n    case constants.FETCH_HAPPY:\r\n      newState.happy = action.payload;\r\n      return newState;\r\n\r\n    case constants.FETCH_KEYWORD:\r\n      newState.keyword = action.payload;\r\n      return newState;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import constants from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  error: \"\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case constants.FETCH_TMDBAPI_ERROR:\r\n      newState.error = action.payload;\r\n      console.log(action.payload);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport gifListsReducer from \"./gifLists.reducer\";\r\nimport errorReducer from \"./error.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  gifListsReducer,\r\n  errorReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nconst ListHeader = ({ header }) => (\r\n  <div className=\"list-title\">\r\n    <h3>{header}</h3>\r\n  </div>\r\n);\r\n\r\nListHeader.propTypes = {\r\n  header: Proptypes.string\r\n};\r\nexport default ListHeader;\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderPic = this.renderPic.bind(this);\r\n  }\r\n\r\n  renderPic = gif => {\r\n    if (gif.images.downsized.url !== null) {\r\n      return (\r\n        <img\r\n          className=\"tile-img\"\r\n          alt={gif.images} data-src=\"\" \r\n           src={gif.images.downsized.url}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { gif } = this.props;\r\n    return (\r\n      <Link className=\"tile\" to=\"#\" >\r\n        <div className=\"tile-img\">{this.renderPic(gif)}</div>\r\n        <div className=\" photo-overlay\">\r\n          <div className=\"tile-text-container\">\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nListItem.propTypes = {\r\n  gif: Proptypes.object\r\n};\r\nexport default ListItem;\r\n\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport $ from \"jquery\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nclass GifList extends React.Component {\r\n  state = {\r\n    margin: 0\r\n  };\r\n\r\n  renderGifList = (gifList) =>\r\n    gifList.map(gif => <ListItem key={gif.id} gif={gif} />);\r\n\r\n  handleLeftClick = e => {\r\n    e.preventDefault();\r\n    // if (this.state.margin < 50) { // use this for single sided rotation\r\n    this.setState({\r\n      margin: this.state.margin + 50\r\n    });\r\n    var pop = this.props.gifList.pop();\r\n    this.props.gifList.unshift(pop);\r\n    // eslint-disable-next-line\r\n    const el = findDOMNode(this.refs.content);\r\n    $(el).animate(\r\n      {\r\n        marginLeft: \"=10px\"\r\n      },\r\n      \"fast\"\r\n    );\r\n    // }\r\n  };\r\n\r\n  handleRightClick = e => {\r\n    e.preventDefault();\r\n    // if (this.state.margin > -4200) {\r\n    this.setState({\r\n      margin: this.state.margin - 50\r\n    });\r\n    var push = this.props.gifList.shift();\r\n    this.props.gifList.push(push);\r\n    // eslint-disable-next-line\r\n    const el = findDOMNode(this.refs.content);\r\n    $(el).animate(\r\n      {\r\n        marginLeft: \"=10px\"\r\n      },\r\n      \"fast\"\r\n    );\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { gifList = [] } = this.props;\r\n    return (\r\n      <div className=\"list-container\">\r\n        <span\r\n          onClick={this.handleLeftClick}\r\n          className=\"left-controls\"\r\n          role=\"button\"\r\n        />\r\n\r\n        <div className=\"module-section clearfix\">\r\n          {/* eslint-disable-next-line react/no-string-refs */}\r\n          <ul id=\"content\" ref=\"content\">\r\n            <div className=\"listRow\">{this.renderGifList(gifList)}{console.log(\"this is the value\" + gifList)}</div>\r\n          </ul>\r\n        </div>\r\n\r\n        <span\r\n          onClick={this.handleRightClick}\r\n          className=\"right-controls\"\r\n          role=\"button\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGifList.propTypes = {\r\n  gifList: Proptypes.array\r\n};\r\nexport default GifList;\r\n","import GphApiClient from 'giphy-js-sdk-core';\r\nimport constants from \"../actions/constants\";\r\n\r\nexport default {\r\n  fetchExcited: () => async dispatch => {\r\n    try {\r\n        var client = GphApiClient(\"F4D3Q1qXdtsGruEH30k6RRigE2IDhsvc\")\r\n        client.search('gifs', {\"q\": \"excited\"})\r\n        .then((response) => {\r\n        \r\n        console.log(response.data) \r\n        dispatch({\r\n          type: constants.FETCH_EXCITED,\r\n          payload: response.data\r\n        });\r\n        })\r\n      \r\n    } catch (err) {\r\n      dispatch({\r\n        type: constants.FETCH_GIPHY_ERROR,\r\n        payload: \"Error occured while fetching from Giphy API\"\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchHappy: () => async dispatch => {\r\n    try {\r\n        var client = GphApiClient(\"F4D3Q1qXdtsGruEH30k6RRigE2IDhsvc\")\r\n        client.search('gifs', {\"q\": \"happy\"})\r\n        .then((response) => {\r\n        \r\n        console.log(response.data) \r\n        dispatch({\r\n          type: constants.FETCH_HAPPY,\r\n          payload: response.data\r\n        });\r\n        })\r\n      \r\n    } catch (err) {\r\n      dispatch({\r\n        type: constants.FETCH_GIPHY_ERROR,\r\n        payload: \"Error occured while fetching from Giphy API\"\r\n      });\r\n    }\r\n  },\r\n  fetchKeyword: (keyword) => async dispatch => {\r\n    try {\r\n        var client = GphApiClient(\"F4D3Q1qXdtsGruEH30k6RRigE2IDhsvc\")\r\n        client.search('gifs', {\"q\": keyword})\r\n        .then((response) => {        \r\n        console.log(response.data) \r\n        dispatch({\r\n          type: constants.FETCH_KEYWORD,\r\n          payload: response.data\r\n        });\r\n        })\r\n      \r\n    } catch (err) {\r\n      dispatch({\r\n        type: constants.FETCH_GIPHY_ERROR,\r\n        payload: \"Error occured while fetching from Giphy API\"\r\n      });\r\n    }\r\n  },\r\n  clearSearchResult: () => dispatch => {\r\n    dispatch({\r\n      type: constants.CLEAR_SEARCH_RESULT\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ListHeader from \"../components/ListHeader\";\r\nimport GifList from \"../components/GifList\";\r\nimport {GifListAction} from \"../actions\"\r\n\r\nclass HomeList extends React.Component {\r\n  componentDidMount() {\r\n    const {fetchExcited, fetchHappy, fetchKeyword\r\n    } = this.props;\r\n    fetchExcited(); \r\n    fetchHappy(); \r\n    fetchKeyword(\"Confident\");\r\n  }\r\n\r\n  render() {\r\n    const { excited, happy, keyword } = this.props;\r\n    return (\r\n      <div>\r\n        <ListHeader header=\"Excited\" />\r\n        <GifList gifList={excited} />\r\n        <ListHeader header=\"Happy\" />\r\n        <GifList gifList={happy} />\r\n        <ListHeader header=\"Confident\" />\r\n        <GifList gifList={keyword} />        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nHomeList.propTypes = {\r\n  fetchExcited: Proptypes.func,\r\n  excited: Proptypes.array,\r\n  fetchHappy: Proptypes.func,\r\n  happy: Proptypes.array,\r\n  fetchKeyword: Proptypes.func,\r\n  keyword: Proptypes.array\r\n};\r\n\r\nconst stateToProps = state => ({\r\n  excited: state.gifListsReducer.excited,\r\n  happy: state.gifListsReducer.happy,\r\n  keyword: state.gifListsReducer.keyword,\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  fetchExcited: () => {\r\n    dispatch(GifListAction.fetchExcited());\r\n  },\r\n  fetchHappy: () => {\r\n    dispatch(GifListAction.fetchHappy());\r\n  },\r\n  fetchKeyword: (input) => {\r\n    dispatch(GifListAction.fetchKeyword(input));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(HomeList);\r\n","import React, { Component } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\"\r\n\r\nimport Slider from \"react-slick\";\r\nimport InfiniteCarousel from 'react-leaf-carousel';\r\nimport Proptypes from \"prop-types\";\r\nimport ListItem from \"../../components/ListItem\";\r\n\r\nconst settings = {\r\n    speed: 300,\r\n    slidesToShow: 4,\r\n    lazyLoad: true,\r\n    infinite: true,\r\n    slidesToScroll: 2,    \r\n    //nextArrow: <div className=\"slick-next\"><i class=\"fa fa-chevron-right\" alt=\"arrow_right\"/></div>,\r\n    //prevArrow: <div class=\"slick-prev\"><span class=\"fa fa-angle-left\"></span><span class=\"sr-only\">Prev</span></div>,\r\n\r\n    initialSlide: 0,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 2,\r\n          infinite: true\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const CarouselList = ({gifList}) => ( \r\n    <Slider {...settings}>\r\n        {gifList.map(gif => <ListItem key={gif.id} gif={gif} />)}\r\n    </Slider>\r\n);\r\n\r\nCarouselList.propTypes = {\r\n    gifList: Proptypes.array\r\n  };\r\n\r\n  export default CarouselList;","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ListHeader from \"../../components/ListHeader\";\r\nimport GifList from \"../../components/GifList\";\r\nimport CarouselList, {InfCarousel} from \"./CarouselList\"\r\nimport {GifListAction} from \"../../actions\"\r\n\r\nclass CarouselLibList extends React.Component {\r\n  componentDidMount() {\r\n    const {fetchExcited, fetchHappy, fetchKeyword\r\n    } = this.props;\r\n    fetchExcited(); \r\n    fetchHappy(); \r\n    fetchKeyword(\"Confident\");\r\n  }\r\n\r\n  render() {\r\n    const { excited, happy, keyword } = this.props;\r\n    return (\r\n      <div>\r\n        <ListHeader header=\"Carousel\" />\r\n        <CarouselList gifList={excited}/>                \r\n      </div>\r\n    );\r\n  }\r\n}\r\nCarouselLibList.propTypes = {\r\n  fetchExcited: Proptypes.func,\r\n  excited: Proptypes.array,\r\n  fetchHappy: Proptypes.func,\r\n  happy: Proptypes.array,\r\n  fetchKeyword: Proptypes.func,\r\n  keyword: Proptypes.array\r\n};\r\n\r\nconst stateToProps = state => ({\r\n  excited: state.gifListsReducer.excited,\r\n  happy: state.gifListsReducer.happy,\r\n  keyword: state.gifListsReducer.keyword,\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  fetchExcited: () => {\r\n    dispatch(GifListAction.fetchExcited());\r\n  },\r\n  fetchHappy: () => {\r\n    dispatch(GifListAction.fetchHappy());\r\n  },\r\n  fetchKeyword: (input) => {\r\n    dispatch(GifListAction.fetchKeyword(input));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(CarouselLibList);\r\n","    \r\nimport React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n       <p style={{fontSize: 26, color:'Orange'}}><b>NOT FOUND :(</b></p>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SearchListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderPic = this.renderPic.bind(this);\r\n  }\r\n\r\n  renderPic = gif => {\r\n    if (gif.images.downsized.url !== null) {\r\n      return (\r\n        <img\r\n          className=\"tile-img\"\r\n          alt={gif.images}\r\n           src={gif.images.downsized.url}\r\n        />\r\n      );\r\n    }\r\n    if (gif.poster_path !== null) {\r\n      return (\r\n        <img\r\n          className=\"tile-img \"\r\n          alt=\"img\"\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <img\r\n        alt=\"img\"\r\n        className=\"tile-img\"\r\n        src=\"http://via.placeholder.com/280x160\"\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { gif } = this.props;\r\n    return (\r\n      <Link className=\"search-tile\" to=\"#\" >\r\n        <div className=\"tile-img\">{this.renderPic(gif)}</div>\r\n        <div className=\" photo-overlay\">\r\n          <div className=\"tile-text-container\">\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nSearchListItem.propTypes = {\r\n  gif: Proptypes.object\r\n};\r\nexport default SearchListItem;\r\n\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport  SearchListItem  from \"./SearchListItem\";\r\nimport GifListAction from \"../actions/gifList.action\";\r\n\r\nclass ViewSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentParam: \"\"\r\n        };\r\n        this.fetchSearch = this.fetchSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSearch();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {\r\n            match: {\r\n                params: { keyword }\r\n            }\r\n        } = this.props;\r\n        const { currentParam } = this.state;\r\n\r\n        if (currentParam !== keyword) this.fetchSearch();\r\n    }\r\n\r\n    fetchSearch = () => {\r\n        const {\r\n            fetchKeyword,\r\n            match: {\r\n                params: { keyword }\r\n            }\r\n        } = this.props;\r\n        fetchKeyword(keyword);\r\n        this.setState({ currentParam: keyword });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const { clearSearchResult } = this.props;\r\n        clearSearchResult();\r\n        this.setState({ currentParam: \"\" });\r\n    }\r\n\r\n    render() {\r\n        const { keyword } = this.props;\r\n        return (\r\n            <div id=\"result-container\">\r\n                <ul>\r\n                    {keyword.map(gif => (\r\n                        <SearchListItem key={gif.id} gif={gif} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nViewSearch.propTypes = {\r\n    keyword: Proptypes.array\r\n};\r\n\r\nconst stateToProps = state => ({\r\n    keyword: state.gifListsReducer.keyword,\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({    \r\n    fetchKeyword: (input) => {\r\n      dispatch(GifListAction.fetchKeyword(input));\r\n    },\r\n   clearSearchResult: () => dispatch(GifListAction.clearSearchResult())\r\n});\r\n\r\nexport default withRouter(\r\n    connect(\r\n        stateToProps,\r\n        dispatchToProps\r\n    )(ViewSearch)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomeList from \"./containers/HomeList\"\r\nimport CarouselLibList from \"./containers/carousel/CarouselLibList\"\r\nimport NotFound from \"./containers/NotFound\"\r\nimport ViewSearch from \"./containers/ViewSearch\";\r\n\r\nconst BaseRouter = () => (\r\n    <div>\r\n      <Switch>\r\n      <Route exact path=\"/\" component={HomeList} />\r\n      {/* <Route exact path=\"/CarouselLib\" component={CarouselLibList} /> */}\r\n      <Route path=\"/search/:keyword\" exact component={ViewSearch} />\r\n\r\n          \r\n      <Route component={NotFound} />{\" \"}\r\n      </Switch>\r\n    </div>\r\n  );\r\n  \r\n  export default BaseRouter;","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer-container\">\r\n    <nav className=\"navbar navbar-light bg-faded\">\r\n      <a className=\"navbar-brand text-danger font-weight-bold\" href=\"/\">\r\n        Giffy-browser @drprat\r\n      </a> \r\n      <p className=\"text-muted lead\" href=\"#\">\r\n        &copy;2018. All Rights Reserved by Prat.\r\n      </p>\r\n      <a\r\n        className=\"navbar-brand text-muted\"\r\n        href=\"https://github.com/drprat/giffy-browser\"\r\n      >\r\n        github\r\n      </a>    \r\n    </nav>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nimport \"./SearchInput.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchInput extends React.Component {\r\n  state = {\r\n    input: \"\",\r\n    ENTER_KEY: 13\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ input: e.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { input } = this.state;\r\n    const { history } = this.props;\r\n    if (input.length === 0) {\r\n      return;\r\n    }\r\n    history.push(`/search/${input}`);\r\n    this.setState({ input: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { input, ENTER_KEY } = this.state;\r\n    return (\r\n      <li>\r\n        <input\r\n          className=\"searchInput\"\r\n          type=\"text\"\r\n          value={this.state.input}\r\n          placeholder=\"Search gif...\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === ENTER_KEY) this.handleSubmit();\r\n          }}\r\n        />\r\n        <span className=\"navItem search-icon \">\r\n          <i className=\"fas fa-search\" onClick={this.handleSubmit} />\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchInput);","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport SearchInput from \"./SearchInput\";\r\n\r\nconst Nav = () => (\r\n  <div>\r\n    <nav className=\"navbar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"logo navItem\">\r\n            <h1 >Giffy-browser</h1>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      {/* <ul>\r\n\r\n        <li>\r\n          <NavLink to=\"/CarouselLib\" >\r\n            <h1 >Lib Implementation</h1>\r\n          </NavLink>\r\n        </li>\r\n\r\n      </ul> */}\r\n      <ul>\r\n        <SearchInput />\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst BaseLayout = (props) => (\r\n        <div className=\"homepage-container\">\r\n        <Nav/>\r\n        {props.children}\r\n        <Footer/>\r\n        </div>\r\n    );\r\n\r\nexport default BaseLayout;","import React, {Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport \"./index.scss\";\nimport BaseRouter from './routes';\nimport BaseLayout from './containers/commons/Layout';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div >\n      <BrowserRouter>\n      <BaseLayout>\n      <BaseRouter />\n      </BaseLayout>\n      </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}